/****************************************************************************
   
    OS/A65 Version 2.0.0
    lib6502 ls program

    Copyright (C) 1997-1998 Andre Fachat 

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

****************************************************************************/

#include "lib6502.i65"
#include "kernel.i65"
#include "kdefs.i65"

main	.(

	.zero
argp	.word 0

	.data
cnt	.byt 0
zei	.byt 0

	.text
	jsr getopts
	bcc nohelp
	lda #<helpstr
	ldy #>helpstr
	jmp strout	; and then terminate
nohelp
	; print header line
	.(
	lda #<it0
	ldy #>it0
	jsr strout
	bit optlong
	bmi noname
	lda #<it1
	ldy #>it1
	jsr strout
noname	lda #<it2
	ldy #>it2
	jsr strout
	bit optlong
	bpl noenv
	lda #<it3
	ldy #>it3
	jsr strout
noenv	lda #<it4
	ldy #>it4
	jsr strout
	.)

info	.(
#if 1 /* fdef NOMMU */
	  clc
	  ldx #SEM_SENDBUF
	  jsr PSEM
#endif
	  jsr GETINFO
infoloop  
          ldx zei
          lda PCBUF+TN_NTHREADS,x
	  bne print
	  bit optall
	  bmi print
	  jmp next
print
	  lda PCBUF+TN_PID,x
          jsr hexout
          jsr spout
	bit optlong
	bmi skipfrontname
	jsr printname
i2        jsr spout
skipfrontname
          ldx zei
	lda PCBUF+TN_EXECADDR+1,x
	jsr hexout
	lda PCBUF+TN_EXECADDR,x
	jsr hexout
	jsr spout

          lda PCBUF+TN_NTHREADS,x
	  jsr hexout
	  jsr spout

	bit optlong
	bpl noenv
          lda PCBUF+TN_ENV,x
	  jsr hexout
	  jsr spout
          ldx zei
          lda PCBUF+TN_MEM,x
          jsr hexout
          jsr spout
noenv
	  lda PCBUF+TN_PARENT,x
	  jsr hexout
          jsr spout
	  lda PCBUF+TN_SIGMASK,x
          jsr hexout
          jsr spout
	  lda PCBUF+TN_SIGNAL+1,x
	  jsr hexout
	  lda PCBUF+TN_SIGNAL,x
	  jsr hexout
	  jsr spout
          lda PCBUF+TN_STDIN,x
          jsr hexout
          jsr spout
          lda PCBUF+TN_STDOUT,x
          jsr hexout
          jsr spout
          lda PCBUF+TN_STDERR,x
          jsr hexout
          jsr spout
	bit optlong
	bpl nextline
	jsr spout
	jsr spout
	jsr spout
	jsr printname
nextline
	jsr crlfout
next	  lda zei
	  clc
	  adc #TN_SLEN
	  sta zei
          inc cnt
          lda cnt
          cmp #ANZ_ENV
          bcs ie
          jmp infoloop
ie        
#if 1 /* def NOMMU */
	  ldx #SEM_SENDBUF
	  jsr VSEM
#endif
	  clc
          rts
	.)

printname .(
          ldx zei
          lda PCBUF+TN_NTHREADS,x
          bne name
          ldx #TNAMLEN
i1        jsr spout
          dex
          bne i1
          beq i2
name      ldy #0
i4        lda PCBUF+TN_NAME,x
          beq i3
          jsr chrout
          iny
          inx
          cpy #TNAMLEN
          bcc i4
i3        cpy #TNAMLEN
          bcs i2
          jsr spout
          iny
          bne i3
i2	rts
	.)

	.data
	; references used by getopts
	; same order and len as optall/optlong/... option bytes above
optslst	.asc "al",0 
	; option list in same order/len as option args
optsflg
optall	.byt 0
optlong .byt 0

it0     .asc 13,10,"PID",0
it1	.asc " Name"
	.dsb TNAMLEN-4, 32
	.byt 0
it2	.asc "Exec Th", 0
it3	.asc " En Me", 0
it4	.asc " Pa Sm SigA In OutErr^M^J",0

helpstr	.asc 13,10
	.asc "ps [opts]",13,10
	.asc "Display the list of processes",13,10
	.asc "Options:",13,10
	.asc " -a     show all entries",13,10
	.asc " -l     show all fields",13,10
	.asc 0

	.text

#include "../apps/common.a65"

	.)

