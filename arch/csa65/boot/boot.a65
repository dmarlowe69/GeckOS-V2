
srcp 	=2
trgp	=4

	.word $033c
	*=$033c

	sei

	; disable interrupt sources
	lda #$7f
	sta $e84e	; interrupt enable

	lda $e811
	and #$b6	; clear bits 0,3 IRQx1/IRQx2 flags, Cx2 input
	sta $e811

	lda $e813
	and #$b6	; clear bits 0,3 IRQx1/IRQx2 flags, Cx2 input
	sta $e813

	lda $e821
	and #$b6	; clear bits 0,3 IRQx1/IRQx2 flags, Cx2 input
	sta $e821

	lda $e823
	and #$b6	; clear bits 0,3 IRQx1/IRQx2 flags, Cx2 input
	sta $e823

	; map the uppermost 32k of the 512k bus memory
	; that is currently mapped to a 512k RAM on
	; the BIOS board
	ldy #$18
	ldx #8
map	tya
	sta $eff0,x
	iny
	inx
	cpx #16
	bcc map

	lda #0
	sta srcp
	sta trgp

kernel	ldy #>$6000	; from $6000
	lda #>OSA2KERNEL; to $e200
	ldx #>(1-OSA2KERNEL) ; 7k (to $ffff)
	jsr copy

lib	ldy #>$4000	; from $4000
	lda #>$c800	; to $c800
	ldx #>(OSA2KERNEL-$c800) ; 7k (to $e3ff)
	jsr copy

rom	ldy #>$0800	; from $0800
	lda #>$8000	; to $8000
	ldx #14*4	; 14k ($0800-$6000 to $8000-$b800)
	jsr copy

	jmp OSA2KERNEL

copy	sty srcp+1
	sta trgp+1
cloop	lda trgp+1
	and #%11111000	; $e800-$efff
	cmp #%11101000
	beq skip	; skip I/O
	ldy #0
loop	lda (srcp),y
	sta (trgp),y
	iny
	bne loop
skip	inc srcp+1
	inc trgp+1
	dex
	bne cloop
	rts


